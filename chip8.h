#ifndef CHIP8_H			// Header guard
#define CHIP8_H

#include <cstdio>		// for loadGame() function
#include <cstdlib>

class chip8 {
	private:
		unsigned short opcode;				// stores current opcode
		unsigned char memory[4096];			// 1-byte words
		unsigned char V[16];				// general purpose CPU registers
		unsigned short I;					// index register
		unsigned short pc;					// program counter

		unsigned char gfx[64 * 32];			// graphics array

		unsigned char delay_timer;			// these timers count down at 60Hz
		unsigned char sound_timer;

		unsigned short stack[16];			// call stack
		unsigned short sp;					// stack pointer

		unsigned char key[16];				// hex keypad
		
		unsigned char chip8_fontset[80] = {
			0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
		    0x20, 0x60, 0x20, 0x20, 0x70, // 1
			0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
			0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
			0x90, 0x90, 0xF0, 0x10, 0x10, // 4
			0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
			0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
			0xF0, 0x10, 0x20, 0x40, 0x40, // 7
			0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
			0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
			0xF0, 0x90, 0xF0, 0x90, 0x90, // A
			0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
			0xF0, 0x80, 0x80, 0x80, 0xF0, // C
			0xE0, 0x90, 0x90, 0x90, 0xE0, // D
			0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
			0xF0, 0x80, 0xF0, 0x80, 0x80  // F
		}

	public:
		bool drawFlag;						// chip 8 doesn't draw each cycle
		void initialize();
		void emulateCycle();
		void loadGame(char *);
}

#endif
